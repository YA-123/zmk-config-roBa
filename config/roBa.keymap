#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

# define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E      &kp R         &kp T                                             &kp Y        &kp U  &lt 5 I    &kp O      &kp P
&kp A         &kp S         &kp D      &kp F         &kp G           &kp LS(LG(S))      &kp MINUS      &kp H        &kp J  &kp K      &kp L      &mt LEFT_SHIFT SLASH
&kp Z         &kp X         &kp C      &kp V         &kp B           &kp COLON          &kp SEMICOLON  &kp N        &kp M  &mkp LCLK  &mkp RCLK  &kp LANG2
&kp LEFT_ALT  &kp LEFT_WIN  &kp LCTRL  &lt 1 DELETE  &mt LWIN SPACE  &lt 3 LANG1        &kp BACKSPACE  &lt 2 ENTER                               &kp DEL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        symbol {
            bindings = <
&kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp EXCL    &kp CARET     &kp TAB                             &kp GRAVE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDER      &kp PERCENT
&kp AT            &kp SEMI           &kp DOLLAR  &kp QUESTION  &kp PIPE       &trans      &kp F13  &kp HASH       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER      &trans
&kp ESC           &kp TILDE          &kp COLON   &kp EXCL      &kp BACKSLASH  &trans      &trans   &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN  &kp GREATER_THAN
&trans            &trans             &trans      &trans        &trans         &trans      &trans   &trans                                                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp PLUS      &kp N7        &kp N8        &kp N9        &kp TAB                                                    &kp PAGE_UP     &kp COMMA       &kp TILDE     &kp PERIOD       &kp PAGE_DOWN
&kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp ESC       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &kp EQUAL                    &trans          &kp HOME        &kp END         &trans        &trans           &trans
&trans        &trans        &trans        &trans        &trans        &trans                       &trans          &trans                                                         &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &trans                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp F4  &kp F5  &kp F6  &kp END  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &kp F1  &kp F2  &kp F3  &trans   &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
